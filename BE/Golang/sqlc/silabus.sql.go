// Code generated by sqlc. DO NOT EDIT.
// source: silabus.sql

package db

import (
	"context"
	"database/sql"
)

const listSilabus = `-- name: ListSilabus :many
SELECT id, judul_silabus, definisi, fungsi_silabus, deskripsi, url_video_silabus, task_silabus, ujian_silabus, skor_silabus, id_admin FROM silabus
`

func (q *Queries) ListSilabus(ctx context.Context) ([]Silabus, error) {
	rows, err := q.db.QueryContext(ctx, listSilabus)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Silabus
	for rows.Next() {
		var i Silabus
		if err := rows.Scan(
			&i.ID,
			&i.JudulSilabus,
			&i.Definisi,
			&i.FungsiSilabus,
			&i.Deskripsi,
			&i.UrlVideoSilabus,
			&i.TaskSilabus,
			&i.UjianSilabus,
			&i.SkorSilabus,
			&i.IDAdmin,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateSilabus = `-- name: UpdateSilabus :exec
UPDATE silabus SET task_silabus = ?, ujian_silabus = ?, skor_silabus = ? WHERE id = ?
`

type UpdateSilabusParams struct {
	TaskSilabus  sql.NullString `json:"task_silabus"`
	UjianSilabus sql.NullString `json:"ujian_silabus"`
	SkorSilabus  sql.NullString `json:"skor_silabus"`
	ID           int32          `json:"id"`
}

func (q *Queries) UpdateSilabus(ctx context.Context, arg UpdateSilabusParams) error {
	_, err := q.db.ExecContext(ctx, updateSilabus,
		arg.TaskSilabus,
		arg.UjianSilabus,
		arg.SkorSilabus,
		arg.ID,
	)
	return err
}
